# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  push:
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  CI:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a single command using the runners shell
      - name: checkout
        uses: actions/checkout@v3.0.0
      - name: bootstrap
        run: |
          npm i
          cd ./frontend
          npm i
          cd ..
          cd ./backend
          npm i
      - name: lint
        run: |
          cd ./frontend
          npx eslint '**' --fix
      - name: build frontend
        run: |
          cd ./frontend
          npm run build
      - name: build backend
        run: |
          cd ./backend
          npm run build
      - name: deploy frontend
        uses: easingthemes/ssh-deploy@v2.0.7
        env:
          SSH_PRIVATE_KEY: ${{ secrets.ALI_KEY }}
          ARGS: "-avzr --delete"
          SOURCE: "frontend/build"
          REMOTE_HOST: ${{ secrets.ALI_HOST }}
          REMOTE_USER: "root"
          TARGET: "/snappy/frontend"
      - name: deploy backend
        uses: easingthemes/ssh-deploy@v2.0.7
        env:
          SSH_PRIVATE_KEY: ${{ secrets.ALI_KEY }}
          ARGS: "-avzr --delete"
          SOURCE: "backend/dist"
          REMOTE_HOST: ${{ secrets.ALI_HOST }}
          REMOTE_USER: "root"
          TARGET: "/snappy/backend"
      - name: reboot node server
        uses: fifsky/ssh-action@master
        with:
          command: |
            pm2 stop snappyServer
            pm2 start /snappy/backend/dist/bundle.min.js -n snappyServer
          host: ${{ secrets.ALI_HOST }}
          user: root
          key: ${{ secrets.ALI_KEY }}
      - name: reboot nginx
        uses: fifsky/ssh-action@master
        with:
          command: |
            systemctl restart nginx
          host: ${{ secrets.ALI_HOST }}
          user: root
          key: ${{ secrets.ALI_KEY }}